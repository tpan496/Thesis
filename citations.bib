@InProceedings{
    tandem,
    editor="Gawlick, Dieter
    and Haynie, Mark
    and Reuter, Andreas",
    title="NonStop SQL: A distributed, high-performance, high-availability implementation of SQL",
    booktitle="High Performance Transaction Systems",
    year="1989",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="60--104",
    abstract="NonStop SQL is an implementation of ANSI SQL on Tandem Computer Systems. It provides distributed data and distributed execution. It can run on small computers and has been benchmarked at over 200 transactions per second on a large system. Hence, it is useable in both the information center and in production environments. NonStop SQL provides high-availability through a combination of NonStop device support and transaction mechanisms. The combination of SQL semantics and a message-based distributed operating system gives a surprising result: the message savings of a relational interface pay for the extra semantics of the SQL language when compared to record-at-a-time interfaces.",
    isbn="978-3-540-46155-5",
    url=https://link.springer.com/chapter/10.1007/3-540-51085-0_43
},

@misc{
    noisepage,
    author = {{CMUDB Group}},
    title = {The NoisePage System},
    month = {June},
    year = {2020},
    howpublished = {\url{https://noise.page/}}
}

@article{neumann11,
    author = {Neumann, Thomas},
    title = {Efficiently Compiling Efficient Query Plans for Modern Hardware},
    journal = {{PVLDB}},
    volume = {4},
    number = {9},
    year = {2011},
    pages = {539--550},
} 

@inproceedings{raducanu13,
    author    = {Bogdan Raducanu and Peter A. Boncz and Marcin Zukowski},
    title     = {Micro adaptivity in Vectorwise},
    booktitle = {SIGMOD},
    pages     = {1231--1242},
    year      = {2013},
}

@article{aries,
author = {Mohan, C. and Haderle, Don and Lindsay, Bruce and Pirahesh, Hamid and Schwarz, Peter},
title = {ARIES: A Transaction Recovery Method Supporting Fine-Granularity Locking and Partial Rollbacks Using Write-Ahead Logging},
year = {1992},
issue_date = {March 1992},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {1},
issn = {0362-5915},
url = {https://doi.org/10.1145/128765.128770},
doi = {10.1145/128765.128770},
abstract = {DB2TM, IMS, and TandemTM systems. ARIES is applicable not only to database management
systems but also to persistent object-oriented languages, recoverable file systems
and transaction-based operating systems. ARIES has been implemented, to varying degrees,
in IBM's OS/2TM Extended Edition Database Manager, DB2, Workstation Data Save Facility/VM,
Starburst and QuickSilver, and in the University of Wisconsin's EXODUS and Gamma database
machine.},
journal = {ACM Trans. Database Syst.},
month = mar,
pages = {94–162},
numpages = {69},
keywords = {latching, write-ahead logging, buffer management, space management, locking}
}

@inproceedings{10.1145/38713.38730,
author = {Lehman, Tobin J. and Carey, Michael J.},
title = {A Recovery Algorithm for a High-Performance Memory-Resident Database System},
year = {1987},
isbn = {0897912365},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/38713.38730},
doi = {10.1145/38713.38730},
abstract = {With memory prices dropping and memory sizes increasing accordingly, a number of researchers
are addressing the problem of designing high-performance database systems for managing
memory-resident data. In this paper we address the recovery problem in the context
of such a system. We argue that existing database recovery schemes fall short of meeting
the requirements of such a system, and we present a new recovery mechanism which is
designed to overcome their shortcomings. The proposed mechanism takes advantage of
a few megabytes of reliable memory in order to organize recovery information on a
per “object” basis. As a result, it is able to amortize the cost of checkpoints over
a controllable number of updates, and it is also able to separate post-crash recovery
into two phases—high-speed recovery of data which is needed immediately by transactions,
and background recovery of the remaining portions of the database. A simple performance
analysis is undertaken, and the results suggest our mechanism should perform well
in a high-performance, memory-resident database environment.},
booktitle = {Proceedings of the 1987 ACM SIGMOD International Conference on Management of Data},
pages = {104–117},
numpages = {14},
location = {San Francisco, California, USA},
series = {SIGMOD '87}
}


@article{system_r,
author = {Gray, Jim and McJones, Paul and Blasgen, Mike and Lindsay, Bruce and Lorie, Raymond and Price, Tom and Putzolu, Franco and Traiger, Irving},
title = {The Recovery Manager of the System R Database Manager},
year = {1981},
issue_date = {June 1981},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {13},
number = {2},
url = {https://doi.org/10.1145/356842.356847},
journal = {ACM Comput. Surv.},
month = jun,
pages = {223–242},
numpages = {20}
}

@inproceedings{silo_r,
author = {Zheng, Wenting and Tu, Stephen and Kohler, Eddie and Liskov, Barbara},
title = {Fast Databases with Fast Durability and Recovery through Multicore Parallelism},
year = {2014},
isbn = {9781931971164},
publisher = {USENIX Association},
address = {USA},
booktitle = {Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation},
pages = {465–477},
numpages = {13},
location = {Broomfield, CO},
series = {OSDI'14}
}

@article{lee18,
 author = {Lee, Juchang and Han, Wook-Shin and Na, Hyoung Jun and Park, Chang Gyoo and Kim, Kyu Hwan and Kim, Deok Hoe and Lee, Joo Yeon and Cha, Sang Kyun and Moon, Seunghyun},
 title = {Parallel Replication Across Formats for Scaling out Mixed OLTP/OLAP Workloads in Main-memory Databases},
 journal = {The VLDB Journal},
 issue_date = {June 2018},
 volume = {27},
 number = {3},
 month = jun,
 year = {2018},
 pages = {421--444},
 numpages = {24},
 url = {https://doi.org/10.1007/s00778-018-0503-z},
 acmid = {3231517},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {Database replication, In-memory database, SAP HANA, Scaling out},
}

@article{malviya14,
  title={Rethinking main memory OLTP recovery},
  author={Nirmesh Malviya and Ariel Weisberg and Samuel Madden and Michael Stonebraker},
  journal={2014 IEEE 30th International Conference on Data Engineering},
  year={2014},
  pages={604-615}
}

@article{volcano,
  author={Graefe, G.},
  journal={IEEE Transactions on Knowledge and Data Engineering}, 
  title={Volcano/spl minus/an extensible and parallel query evaluation system}, 
  year={1994},
  volume={6},
  number={1},
  pages={120-135},
  doi={10.1109/69.273032}}
  
  @article{kersten18,
  title={Everything You Always Wanted to Know About Compiled and Vectorized Queries But Were Afraid to Ask},
  author={T. Kersten and Viktor Leis and A. Kemper and Thomas Neumann and Andrew Pavlo and P. Boncz},
  journal={Proc. VLDB Endow.},
  year={2018},
  volume={11},
  pages={2209-2222}
}